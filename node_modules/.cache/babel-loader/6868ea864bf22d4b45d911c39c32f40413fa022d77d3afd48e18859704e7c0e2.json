{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felix\\\\Documents\\\\atapp\\\\attendance-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [selectedArea, setSelectedArea] = useState(\"\");\n  const [areas, setAreas] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n    fetchAreas();\n  }, []);\n  const fetchTasks = async () => {\n    const response = await axios.get(\"/api/tasks\");\n    setTasks(response.data);\n  };\n  const fetchAreas = async () => {\n    const response = await axios.get(\"/api/areas\");\n    setAreas(response.data);\n  };\n  const addTask = async () => {\n    if (newTask.trim() === \"\" || selectedArea === \"\") return;\n    const response = await axios.post(\"/api/tasks\", {\n      TaskDescription: newTask,\n      AreaAssigned: selectedArea\n    });\n    setTasks([...tasks, response.data]);\n    setNewTask(\"\");\n  };\n  const deleteTask = async taskId => {\n    await axios.delete(`/api/tasks/${taskId}`);\n    setTasks(tasks.filter(task => task._id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedArea,\n      onChange: e => setSelectedArea(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), areas.map(area => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: area._id,\n        children: area.AreaName\n      }, area._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.TaskDescription, \" - \", task.AreaAssigned.AreaName, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"28KtLpmFQSgKCcdsPdpj8+CSiEk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTask","setNewTask","selectedArea","setSelectedArea","areas","setAreas","fetchTasks","fetchAreas","response","get","data","addTask","trim","post","TaskDescription","AreaAssigned","deleteTask","taskId","delete","filter","task","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","area","AreaName","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/felix/Documents/atapp/attendance-app/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [selectedArea, setSelectedArea] = useState(\"\");\r\n  const [areas, setAreas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchAreas();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    const response = await axios.get(\"/api/tasks\");\r\n    setTasks(response.data);\r\n  };\r\n\r\n  const fetchAreas = async () => {\r\n    const response = await axios.get(\"/api/areas\");\r\n    setAreas(response.data);\r\n  };\r\n\r\n  const addTask = async () => {\r\n    if (newTask.trim() === \"\" || selectedArea === \"\") return;\r\n\r\n    const response = await axios.post(\"/api/tasks\", {\r\n      TaskDescription: newTask,\r\n      AreaAssigned: selectedArea,\r\n    });\r\n    setTasks([...tasks, response.data]);\r\n    setNewTask(\"\");\r\n  };\r\n\r\n  const deleteTask = async (taskId) => {\r\n    await axios.delete(`/api/tasks/${taskId}`);\r\n    setTasks(tasks.filter((task) => task._id !== taskId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks List</h2>\r\n\r\n      <select\r\n        value={selectedArea}\r\n        onChange={(e) => setSelectedArea(e.target.value)}\r\n      >\r\n        <option value=\"\">Select Area</option>\r\n        {areas.map((area) => (\r\n          <option key={area._id} value={area._id}>\r\n            {area.AreaName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"New Task\"\r\n      />\r\n      <button onClick={addTask}>Add Task</button>\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task._id}>\r\n            {task.TaskDescription} - {task.AreaAssigned.AreaName}\r\n            <button onClick={() => deleteTask(task._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}